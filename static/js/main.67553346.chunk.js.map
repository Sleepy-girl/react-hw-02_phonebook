{"version":3,"sources":["components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactList.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","id","uuidv4","this","type","onChange","placeholder","Component","Filter","getFilterValue","ContactList","contacts","onRemoveContact","map","contact","key","onClick","App","filter","addToContacts","objectContact","find","alert","prevState","getFilteredData","toLowerCase","includes","removeContact","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA2DeA,E,4MAtDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAAM,IAAD,EACCA,EAAEC,OAAlBJ,EADe,EACfA,KAAMK,EADS,EACTA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,MAEO,EAAKT,MAAtBC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACd,EAAKQ,MAAMC,SAAS,CAAEC,GAAIC,cAAUZ,OAAMC,Y,uDAGlC,IAAD,EACkBY,KAAKd,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,oCACE,0BAAMS,SAAUG,KAAKN,cACnB,uCAEE,2BACEO,KAAK,OACLd,KAAK,OACLK,MAAOL,EACPe,SAAUF,KAAKX,kBACfc,YAAY,aAGhB,yCAEE,2BACEF,KAAK,OACLd,KAAK,SACLK,MAAOJ,EACPc,SAAUF,KAAKX,kBACfc,YAAY,eAGhB,4BAAQF,KAAK,UAAb,qB,GA3CgBG,aCeXC,MAjBf,YAA4C,IAA1BC,EAAyB,EAAzBA,eAAgBd,EAAS,EAATA,MAChC,OACE,oCACE,qDAEE,2BACES,KAAK,OACLd,KAAK,SACLe,SAAUI,EACVd,MAAOA,EACPW,YAAY,eCKPI,MAff,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,4BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,wBAAIC,IAAKD,EAAQb,IACda,EAAQxB,KADX,KACmBwB,EAAQvB,OACzB,4BAAQa,KAAK,SAASY,QAAS,kBAAMJ,EAAgBE,EAAQb,MAA7D,gBC+DKgB,EAlEf,4MACE5B,MAAQ,CACNsB,SAAU,GAMVO,OAAQ,IARZ,EAWEC,cAAgB,SAAAC,GACd,EAAK/B,MAAMsB,SAASU,MAAK,SAAAP,GAAO,OAAIA,EAAQxB,OAAS8B,EAAc9B,QAC/DgC,MAAM,GAAD,OAAIF,EAAc9B,KAAlB,6BACL,EAAKM,UAAS,SAAA2B,GACZ,MAAO,CACLZ,SAAS,GAAD,mBAAMY,EAAUZ,UAAhB,CAA0BS,SAhB9C,EAqBEX,eAAiB,SAAAhB,GACf,EAAKG,SAAS,CAAEsB,OAAQzB,EAAEC,OAAOC,SAtBrC,EAyBE6B,gBAAkB,SAAA/B,GAChB,OAAO,EAAKJ,MAAM6B,OACd,EAAK7B,MAAMsB,SAASO,QAAO,SAAAJ,GAAO,OAChCA,EAAQxB,KAAKmC,cAAcC,SAAS,EAAKrC,MAAM6B,OAAOO,kBAExD,EAAKpC,MAAMsB,UA9BnB,EAiCEgB,cAAgB,SAAA1B,GACd,EAAKL,UAAS,SAAA2B,GACZ,MAAO,CACLZ,SAAUY,EAAUZ,SAASO,QAAO,SAAAJ,GAAO,OAAIA,EAAQb,KAAOA,UApCtE,uDA0CI,IAAMiB,EAASf,KAAKd,MAAM6B,OACpBP,EAAWR,KAAKd,MAAMsB,SAE5B,OACE,oCACE,yCACA,kBAAC,EAAD,CAAaX,SAAUG,KAAKgB,gBAC3BR,EAASiB,OAAS,EACjB,6BACE,wCACA,kBAAC,EAAD,CAAQnB,eAAgBN,KAAKM,eAAgBd,MAAOuB,IACpD,kBAAC,EAAD,CACEP,SAAUR,KAAKqB,kBACfZ,gBAAiBT,KAAKwB,iBAI1B,2FA3DV,GAAyBpB,aCAzBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.67553346.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit({ id: uuidv4(), name, number });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleInputChange}\n              placeholder=\"name...\"\n            />\n          </label>\n          <label>\n            Number:\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleInputChange}\n              placeholder=\"number...\"\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\n\nfunction Filter({ getFilterValue, value }) {\n  return (\n    <>\n      <h3>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={getFilterValue}\n          value={value}\n          placeholder=\"find...\"\n        />\n      </h3>\n    </>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\n\nfunction ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport ContactForm from './contactForm/ContactForm';\nimport Filter from './filter/Filter';\nimport ContactList from './contactList/ContactList';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addToContacts = objectContact => {\n    this.state.contacts.find(contact => contact.name === objectContact.name)\n      ? alert(`${objectContact.name} is already in contacts.`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, objectContact],\n          };\n        });\n  };\n\n  getFilterValue = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredData = e => {\n    return this.state.filter\n      ? this.state.contacts.filter(contact =>\n          contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const filter = this.state.filter;\n    const contacts = this.state.contacts;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addToContacts} />\n        {contacts.length > 0 ? (\n          <div>\n            <h2>Contacts</h2>\n            <Filter getFilterValue={this.getFilterValue} value={filter} />\n            <ContactList\n              contacts={this.getFilteredData()}\n              onRemoveContact={this.removeContact}\n            />\n          </div>\n        ) : (\n          <h2>Your phonebook is empty, please add your first contact</h2>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}